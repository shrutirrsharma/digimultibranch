trigger:
  - '*'   # Pipeline should be triggered on any changes to the repository (any branch)

pr:
  - '*'   # Pipeline should also run on any pull requests

jobs:

- job: Build
  pool:
    name: Default

  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\DigitalSignature.zip"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'Drop'
      publishLocation: 'pipeline'

- job: DeployUAT
  displayName: 'Deploy to UAT'
  dependsOn: Build
  condition: eq(variables['Build.SourceBranchName'], 'main')
  pool:
    name: Default
  steps:
  - task: PowerShell@2
    displayName: 'Deploy to IIS'
    inputs:
      targetType: 'inline'
      script: |
        $source = 'C:\Users\IIS-Windows-name\Downloads\vsts-agent-win-x64-3.244.1\_work\ArtifactFolderMain\DigitalSignature.zip'  # Actual path of the zip file
        $destination = 'C:\inetpub\wwwroot\digitalsign\'  # Your physical path

        # Check if the source file exists before attempting to unzip
        if (Test-Path -Path $source) {
          # Unzip the package if it's a zip file
          Expand-Archive -Path $source -DestinationPath $destination -Force
        } else {
          Write-Error "The source file does not exist: $source"
          exit 1
        }
